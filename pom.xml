<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>net.dstone</groupId>
	<artifactId>dstone-batch-server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>dstone-batch-server</name>
	<packaging>war</packaging>
	
	<!-- lookup parent from repository -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.5</version>
	</parent>
	
	<properties>	
		<main.class>net.dstone.common.DstoneBatchServer</main.class>	
		<java.version>1.8</java.version>
		<log4j.version>2.24.3</log4j.version>
		<lightmin.server.version>2.2.1</lightmin.server.version>
		<maven-eclipse-plugin.version>2.10</maven-eclipse-plugin.version>
		<!--  
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
		<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
		<maven-install-plugin.version>2.5.2</maven-install-plugin.version>
		<maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
		<maven-war-plugin.version>3.3.1</maven-war-plugin.version>
		<maven-deploy-plugin.version>3.1.3</maven-deploy-plugin.version>
		-->
	</properties>

	<repositories>
        <repository>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo.maven.apache.org/maven2</url>
            <layout>default</layout>
			<releases>
				<enabled>true</enabled>
			</releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    
	<dependencies>
	
		<!-- SpringBoot/Spring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency> 
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-quartz</artifactId>
		</dependency>
		
		<!-- Spring Batch Lightmin Server -->
		<dependency>
			<groupId>org.tuxdevelop</groupId>
			<artifactId>spring-batch-lightmin-server-standalone</artifactId>
		  	<version>${lightmin.server.version}</version>
		    <exclusions>
		        <exclusion>
				    <groupId>ch.qos.logback</groupId>
				    <artifactId>logback-classic</artifactId>
		        </exclusion>
		        <exclusion>
				    <groupId>org.apache.logging.log4j</groupId>
				    <artifactId>log4j-to-slf4j</artifactId>
		        </exclusion>
		    </exclusions>		  	
		</dependency>
		<dependency>
			<groupId>org.tuxdevelop</groupId>
			<artifactId>spring-batch-lightmin-repository-server</artifactId>
			<version>${lightmin.server.version}</version>
		</dependency>
		<dependency>
			<groupId>org.tuxdevelop</groupId>
			<artifactId>spring-batch-lightmin-repository-jdbc</artifactId>
		  	<version>${lightmin.server.version}</version>
		</dependency>
		<dependency>
			<groupId>org.tuxdevelop</groupId>
			<artifactId>spring-batch-lightmin-server-scheduler-repository-jdbc</artifactId>
			<version>${lightmin.server.version}</version>
		</dependency>
		
		<!-- DATABASE -->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
		</dependency>	
		<dependency>
		    <groupId>mysql</groupId>
		    <artifactId>mysql-connector-java</artifactId>
		    <version>8.0.33</version>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
		</dependency>	
        <dependency>
            <groupId>oracle.jdbc</groupId>
            <artifactId>ojdbc</artifactId>
            <version>12.1.0.2.0</version>
            <scope>system</scope>
            <systemPath>${basedir}/src/main/webapp/WEB-INF/lib/ojdbc8-12.2.0.1.jar</systemPath>
        </dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId><!-- JNDI설정을 위한 dbcp -->
		</dependency>		
		
		<!-- Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<!-- Logging -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		    <version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
		    <version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.bgee.log4jdbc-log4j2</groupId>
			<artifactId>log4jdbc-log4j2-jdbc4.1</artifactId>
		    <version>1.16</version>
		</dependency>
		
		<!-- dstone 라이브러리 -->
        <dependency>
            <groupId>net.dstone</groupId>
            <artifactId>dstone-boot</artifactId>
            <version>0.0.1-SNAPSHOT</version>
            <scope>system</scope>
            <systemPath>${basedir}/src/main/webapp/WEB-INF/lib/dstone-utils.jar</systemPath>
        </dependency>	
		
		<!-- Encrypt -->
		<dependency> 
			<groupId>com.github.ulisesbocchio</groupId> 
			<artifactId>jasypt-spring-boot-starter</artifactId> 
			<version>3.0.4</version> 
		</dependency>
		<dependency>
		    <groupId>org.bouncycastle</groupId>
		    <artifactId>bcprov-jdk18on</artifactId>
		    <version>1.75</version>
		</dependency>
		
	</dependencies>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>2020.0.6</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

    <build>
		<finalName>${artifactId}</finalName>
        <resources>
            <resource>
                <directory>conf</directory>
                <targetPath>${project.basedir}/target/classes</targetPath>
				<includes>
					<include>env.properties</include>
				</includes>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <targetPath>${project.basedir}/target/classes</targetPath>
				<includes>
					<include>**/*.xml</include>
				</includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <targetPath>${project.basedir}/target/classes</targetPath>
				<excludes>
					<exclude>**/*.java</exclude>
					<!-- Resources Replacement(Ones in conf directory should be used instead.) Start  -->
					<!-- 로컬환경에서는 주석처리하지만 서버환경에서는 주석제거해야하는 부분(설정파일이 war에 들어가게 되면 conf안의 파일보다 해당 설정을 먼저 읽어버리는 경우가 있음.)  시작 -->
					<!--
					<exclude>application.xml</exclude>
					<exclude>log4j2.xml</exclude>
					-->
					<!-- 로컬환경에서는 주석처리하지만 서버환경에서는 주석제거해야하는 부분(설정파일이 war에 들어가게 되면 conf안의 파일보다 해당 설정을 먼저 읽어버리는 경우가 있음.)  끝 -->
					<!-- Resources Replacement(Ones in conf directory should be used instead.) End  -->
				</excludes>
                <filtering>true</filtering>
            </resource>
        </resources>
        
		<plugins>
			<!-- 이클립스에서 메이븐 사용하기 위한 플러그인 -->
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>${maven-eclipse-plugin.version}</version>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <additionalBuildcommands>
                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                    </additionalBuildcommands>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
		
			<!-- 컴파일을 위한 플러그인 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			 
			<!-- WAR 패키징을 위한 플러그인 -->		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
			</plugin>
 	
			<!-- JAR (스프링부트형식-BOOT-INF포함구조-으로) 패키징을 위한 플러그인 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<includeSystemScope>false</includeSystemScope>
					<mainClass>${main.class}</mainClass>
				</configuration>
			</plugin>
		</plugins>
		
    </build>


</project>